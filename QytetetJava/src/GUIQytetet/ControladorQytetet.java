/*
 * Proyecto: Qytetet - PDOO
 * Alumno: David Infante Casas
 * ETSIIT, UGR, Granada, España
 */
package GUIQytetet;
import java.awt.Color;
import modeloqytetet.Qytetet;
import modeloqytetet.MetodoSalirCarcel;
import modeloqytetet.Jugador;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import modeloqytetet.TipoCasilla;

/**
 *
 * @author David Infante Casas
 */
public class ControladorQytetet extends javax.swing.JFrame {

    /**
     * Creates new form ControladorQytetet
     */
    public ControladorQytetet() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButton1 = new javax.swing.JRadioButton();
        vistaQytetet1 = new GUIQytetet.VistaQytetet();
        jButtonCarcelDado = new javax.swing.JButton();
        jButtonCarcelPagar = new javax.swing.JButton();
        jButtonJugar = new javax.swing.JButton();
        jButtonComprar = new javax.swing.JButton();
        jButtonPasarTurno = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jButtonVender = new javax.swing.JButton();
        jButtonHipotecar = new javax.swing.JButton();
        jButtonCancelarHipoteca = new javax.swing.JButton();
        jButtonEdificarCasa = new javax.swing.JButton();
        jButtonEdificarHotel = new javax.swing.JButton();
        BotonesJugar = new java.awt.Label();
        BotonesCarcel = new java.awt.Label();
        BotonesInmobiliaria = new java.awt.Label();
        jButtonAbout = new javax.swing.JButton();
        jTextFieldPropiedad = new javax.swing.JTextField();
        IntroducirPropiedad = new java.awt.Label();
        jButtonInstrucciones = new javax.swing.JButton();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonCarcelDado.setText("Cárcel dado");
        jButtonCarcelDado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarcelDadoActionPerformed(evt);
            }
        });

        jButtonCarcelPagar.setText("Cárcel Pagar");
        jButtonCarcelPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarcelPagarActionPerformed(evt);
            }
        });

        jButtonJugar.setText("Jugar");
        jButtonJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonJugarActionPerformed(evt);
            }
        });

        jButtonComprar.setText("Comprar");
        jButtonComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonComprarActionPerformed(evt);
            }
        });

        jButtonPasarTurno.setText("Pasar Turno");
        jButtonPasarTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPasarTurnoActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButtonVender.setText("Vender");
        jButtonVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVenderActionPerformed(evt);
            }
        });

        jButtonHipotecar.setText("Hipotecar");
        jButtonHipotecar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHipotecarActionPerformed(evt);
            }
        });

        jButtonCancelarHipoteca.setText("Cancelar Hipoteca");
        jButtonCancelarHipoteca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarHipotecaActionPerformed(evt);
            }
        });

        jButtonEdificarCasa.setText("Edificar Casa");
        jButtonEdificarCasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEdificarCasaActionPerformed(evt);
            }
        });

        jButtonEdificarHotel.setText("Edificar Hotel");
        jButtonEdificarHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEdificarHotelActionPerformed(evt);
            }
        });

        BotonesJugar.setText("Jugar:");

        BotonesCarcel.setText("Salir de la Cárcel:");

        BotonesInmobiliaria.setText("Gestión Inmobiliaria:");

        jButtonAbout.setText("About");
        jButtonAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAboutActionPerformed(evt);
            }
        });

        jTextFieldPropiedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPropiedadActionPerformed(evt);
            }
        });

        IntroducirPropiedad.setText("Introducir la propiedad objetivo:");

        jButtonInstrucciones.setText("Instrucciones");
        jButtonInstrucciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInstruccionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(vistaQytetet1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButtonJugar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonPasarTurno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BotonesJugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonCarcelDado, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonCarcelPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BotonesCarcel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAbout)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonInstrucciones)))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BotonesInmobiliaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(IntroducirPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButtonComprar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonVender, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButtonHipotecar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonCancelarHipoteca))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButtonEdificarHotel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonEdificarCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vistaQytetet1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonesJugar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonesCarcel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonesInmobiliaria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButtonPasarTurno))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonJugar)
                            .addComponent(jButtonCarcelDado)
                            .addComponent(jButtonComprar)
                            .addComponent(jButtonHipotecar)
                            .addComponent(jButtonEdificarCasa))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCarcelPagar)
                            .addComponent(jButtonVender)
                            .addComponent(jButtonCancelarHipoteca)
                            .addComponent(jButtonEdificarHotel))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonSalir)
                        .addComponent(jButtonAbout)
                        .addComponent(jButtonInstrucciones))
                    .addComponent(jTextFieldPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IntroducirPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Botón Salir Cárcel Dado
    private void jButtonCarcelDadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarcelDadoActionPerformed
        this.jButtonCarcelDado.setEnabled(false);
        this.jButtonCarcelPagar.setEnabled(false);
        if (modeloQytetet.getJugadorActual().getEncarcelado()) {
            boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.TIRANDODADO);
            if(resultado){
                JOptionPane.showMessageDialog(this, "Sales de la cárcel");
                this.jButtonJugar.setEnabled(true);
            }else {
                JOptionPane.showMessageDialog(this, "NO sales de la carcel");
                this.jButtonPasarTurno.setEnabled(true);
            }
        } else {
            this.jButtonJugar.setEnabled(true);
        }
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_jButtonCarcelDadoActionPerformed

    //Botón Salir Cárcel Pagando
    private void jButtonCarcelPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarcelPagarActionPerformed
        this.jButtonCarcelPagar.setEnabled(false);
        this.jButtonCarcelDado.setEnabled(false);
        if (modeloQytetet.getJugadorActual().getEncarcelado()) {
            boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.PAGANDOLIBERTAD);
            if(resultado){
                JOptionPane.showMessageDialog(this, "Sales de la cárcel");
                this.jButtonJugar.setEnabled(true);
                this.jButtonPasarTurno.setEnabled(false);
            }else {
                JOptionPane.showMessageDialog(this, "NO sales de la carcel");
                this.jButtonPasarTurno.setEnabled(true);
                this.jButtonJugar.setEnabled(false);
            }
        } else {
            this.jButtonJugar.setEnabled(true);
        }
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_jButtonCarcelPagarActionPerformed

    //Botón Jugar
    private void jButtonJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonJugarActionPerformed
        this.jButtonJugar.setEnabled(false);
        this.jButtonPasarTurno.setEnabled(false);
        if (!modeloQytetet.getJugadorActual().getEncarcelado()) {
            this.jButtonCarcelDado.setEnabled(false);
            this.jButtonCarcelPagar.setEnabled(false);
        }
        else {
            this.jButtonCarcelDado.setEnabled(true);
            this.jButtonCarcelPagar.setEnabled(true);
        }
        modeloQytetet.jugar();
        //Aplicar Sorpresa
        if (modeloQytetet.getJugadorActual().getCasillaActual().getTipo() == TipoCasilla.SORPRESA) modeloQytetet.aplicarSorpresa();
        this.vistaQytetet1.actualizar(modeloQytetet);
        //Comprar Casilla
        if (modeloQytetet.getJugadorActual().getCasillaActual().getTipo() == TipoCasilla.CALLE && !modeloQytetet.getJugadorActual().getCasillaActual().tengoPropietario() && modeloQytetet.getJugadorActual().tengoSaldo(modeloQytetet.getJugadorActual().getCasillaActual().getCoste())) {
            this.jButtonComprar.setEnabled(true);
        }
        //Enable de botones después de tirar
        if (modeloQytetet.getJugadorActual().tengoPropiedades()) {
            this.jButtonVender.setEnabled(true);
            this.jButtonHipotecar.setEnabled(true);
            this.jButtonCancelarHipoteca.setEnabled(true);
            this.jButtonEdificarCasa.setEnabled(true);
            this.jButtonEdificarHotel.setEnabled(true);
        }
        this.jButtonPasarTurno.setEnabled(true);
        this.vistaQytetet1.actualizar(modeloQytetet);
        //Ventana emergente FIN DEL JUEGO
        if (modeloQytetet.getJugadorActual().bancarrota()) {
            HashMap<String, Integer> ranking = modeloQytetet.obtenerRanking();
            String rank = "Has caído en bancarrota, fin del juego.\nRANKING:\n";
            for (Jugador j : modeloQytetet.getJugadores()) {
                rank += (j.getNombre() + " - " + ranking.get(j.getNombre()) + "\n");
            }
            JOptionPane.showMessageDialog(this, rank);
            this.jButtonCarcelDado.setEnabled(false);
            this.jButtonCarcelPagar.setEnabled(false);
            this.jButtonComprar.setEnabled(false);
            this.jButtonJugar.setEnabled(false);
            this.jButtonPasarTurno.setEnabled(false);
        }
    }//GEN-LAST:event_jButtonJugarActionPerformed

    //Botón Comprar
    private void jButtonComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonComprarActionPerformed
        if (modeloQytetet.getJugadorActual().getCasillaActual().getTipo() == TipoCasilla.CALLE && !modeloQytetet.getJugadorActual().getCasillaActual().tengoPropietario() && modeloQytetet.getJugadorActual().tengoSaldo(modeloQytetet.getJugadorActual().getCasillaActual().getCoste())) {
            modeloQytetet.getJugadorActual().comprarTitulo();
            this.jButtonComprar.setEnabled(false);
        }
        if (modeloQytetet.getJugadorActual().tengoPropiedades()) {
            this.jButtonVender.setEnabled(true);
            this.jButtonHipotecar.setEnabled(true);
            this.jButtonCancelarHipoteca.setEnabled(true);
            this.jButtonEdificarCasa.setEnabled(true);
            this.jButtonEdificarHotel.setEnabled(true);
        }
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_jButtonComprarActionPerformed

    //Botón Pasar Turno
    private void jButtonPasarTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPasarTurnoActionPerformed
        numPropiedades = 0;
        vender = false;
        hipotecar = false;
        cancelarHipoteca = false;
        edificarCasa = false;
        edificarHotel = false;
        
        this.jButtonVender.setEnabled(false);
        this.jButtonHipotecar.setEnabled(false);
        this.jButtonCancelarHipoteca.setEnabled(false);
        this.jButtonEdificarCasa.setEnabled(false);
        this.jButtonEdificarHotel.setEnabled(false);
        
        jTextFieldPropiedad.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        
        this.jButtonVender.setEnabled(false);
        this.jButtonHipotecar.setEnabled(false);
        this.jButtonCancelarHipoteca.setEnabled(false);
        this.jButtonEdificarCasa.setEnabled(false);
        this.jButtonEdificarHotel.setEnabled(false);
        modeloQytetet.siguienteJugador();
        if (modeloQytetet.getJugadorActual().getEncarcelado()) {
            this.jButtonComprar.setEnabled(false);
            this.jButtonCarcelDado.setEnabled(true);
            if (modeloQytetet.getJugadorActual().getSaldo() >= Qytetet.SALDO_SALIDA) this.jButtonCarcelPagar.setEnabled(true);
            else this.jButtonCarcelPagar.setEnabled(false);
        }
        else {
            this.jButtonJugar.setEnabled(true);
            this.jButtonComprar.setEnabled(false);
        }
        this.jButtonPasarTurno.setEnabled(false);
        this.vistaQytetet1.actualizar(modeloQytetet);
        this.vistaQytetet1.actualizarPropiedades(modeloQytetet, 0);
    }//GEN-LAST:event_jButtonPasarTurnoActionPerformed

    //Botón Salir
    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    //Botón Vender
    private void jButtonVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVenderActionPerformed
        vender = true;
        hipotecar = false;
        cancelarHipoteca = false;
        edificarCasa = false;
        edificarHotel = false;
        
        jTextFieldPropiedad.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        
        this.vistaQytetet1.actualizarPropiedades(modeloQytetet, 3);
        ArrayList<String> props = modeloQytetet.getJugadorActual().getPropiedades(3);
        propiedades = new String[20];
        numPropiedades = 0;
        for (String p : props) {
            propiedades[numPropiedades] = p;
            ++numPropiedades;
        }
    }//GEN-LAST:event_jButtonVenderActionPerformed

    //Botón Hipotecar
    private void jButtonHipotecarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHipotecarActionPerformed
        vender = false;
        hipotecar = true;
        cancelarHipoteca = false;
        edificarCasa = false;
        edificarHotel = false;
        
        jTextFieldPropiedad.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        
        this.vistaQytetet1.actualizarPropiedades(modeloQytetet, 4);
        ArrayList<String> props = modeloQytetet.getJugadorActual().getPropiedades(4);
        propiedades = new String[20];
        numPropiedades = 0;
        for (String p : props) {
            propiedades[numPropiedades] = p;
            ++numPropiedades;
        }
    }//GEN-LAST:event_jButtonHipotecarActionPerformed

    //Botón Cancelar Hipoteca
    private void jButtonCancelarHipotecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarHipotecaActionPerformed
        vender = false;
        hipotecar = false;
        cancelarHipoteca = true;
        edificarCasa = false;
        edificarHotel = false;
        
        jTextFieldPropiedad.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        
        this.vistaQytetet1.actualizarPropiedades(modeloQytetet, 5);
        ArrayList<String> props = modeloQytetet.getJugadorActual().getPropiedades(5);
        propiedades = new String[20];
        numPropiedades = 0;
        for (String p : props) {
            propiedades[numPropiedades] = p;
            ++numPropiedades;
        }
    }//GEN-LAST:event_jButtonCancelarHipotecaActionPerformed

    //Botón Edificar Casa
    private void jButtonEdificarCasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEdificarCasaActionPerformed
        vender = false;
        hipotecar = false;
        cancelarHipoteca = false;
        edificarCasa = true;
        edificarHotel = false;
        
        jTextFieldPropiedad.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        
        this.vistaQytetet1.actualizarPropiedades(modeloQytetet, 1);
        ArrayList<String> props = modeloQytetet.getJugadorActual().getPropiedades(1);
        propiedades = new String[20];
        numPropiedades = 0;
        for (String p : props) {
            propiedades[numPropiedades] = p;
            ++numPropiedades;
        }
    }//GEN-LAST:event_jButtonEdificarCasaActionPerformed

    //Botón Edificar Hotel
    private void jButtonEdificarHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEdificarHotelActionPerformed
        vender = false;
        hipotecar = false;
        cancelarHipoteca = false;
        edificarCasa = false;
        edificarHotel = true;
        
        jTextFieldPropiedad.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        
        this.vistaQytetet1.actualizarPropiedades(modeloQytetet, 2);
        ArrayList<String> props = modeloQytetet.getJugadorActual().getPropiedades(2);
        propiedades = new String[20];
        numPropiedades = 0;
        for (String p : props) {
            propiedades[numPropiedades] = p;
            ++numPropiedades;
        }
    }//GEN-LAST:event_jButtonEdificarHotelActionPerformed

    //Botón About
    private void jButtonAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAboutActionPerformed
        JOptionPane.showMessageDialog(this, "Qytetet Java"
                + "\nVersion 1.0.1"
                + "\nRelease Date: 27/12/2017"
                + "\nMade by: David Infante Casas"
                + "\nETSIIT, UGR, Granada, España"
                + "\n"
                + "\nPatch notes:"
                + "\n"
                + "\nVersion 1.0.1:"
                + "\n- Arreglado un fallo que permitía darle al botón jugar"
                + "\n  sin especificar el número de jugadores.");
    }//GEN-LAST:event_jButtonAboutActionPerformed

    //TextField Elección Propiedad
    private void jTextFieldPropiedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPropiedadActionPerformed
        int numPropsEntrada = Integer.parseInt(jTextFieldPropiedad.getText().trim());
        if (numPropsEntrada < numPropiedades) {
            if (vender) modeloQytetet.venderPropiedad(modeloQytetet.getJugadorActual().searchCasilla(propiedades[numPropsEntrada]));
            else if (hipotecar) modeloQytetet.hipotecarPropiedad(modeloQytetet.getJugadorActual().searchCasilla(propiedades[numPropsEntrada]));
            else if (cancelarHipoteca) modeloQytetet.cancelarHipoteca(modeloQytetet.getJugadorActual().searchCasilla(propiedades[numPropsEntrada]));
            else if (edificarCasa) modeloQytetet.edificarCasa(modeloQytetet.getJugadorActual().searchCasilla(propiedades[numPropsEntrada]));
            else if (edificarHotel) modeloQytetet.edificarHotel(modeloQytetet.getJugadorActual().searchCasilla(propiedades[numPropsEntrada]));
        }
        else jTextFieldPropiedad.setBorder(BorderFactory.createLineBorder(Color.RED));
        
        numPropiedades = 0;
        vender = false;
        hipotecar = false;
        cancelarHipoteca = false;
        edificarCasa = false;
        edificarHotel = false;
        this.vistaQytetet1.actualizar(modeloQytetet);
        this.vistaQytetet1.actualizarPropiedades(modeloQytetet, 0);
    }//GEN-LAST:event_jTextFieldPropiedadActionPerformed

    private void jButtonInstruccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInstruccionesActionPerformed
        JOptionPane.showMessageDialog(this, "Instrucciones:"
                + "\n\nVentanas:"
                + "\nVentana Información Jugador:                  muestra la información del jugador actual."
                + "\nVentana Información Carta Sorpresa:     muestra la información de la última carta sorpresa cogida."
                + "\nVentana Información Casilla:                    muestra la información de la casilla en la que se encuentra el jugador actual."
                + "\nVentana Información Propiedades:         muestra las propiedades que pertenecen al jugador actual, que cumplen la condición definida y asocia a ellas un número,"
                + "\n                                                                        por ejemplo:"
                + "\n                                                                        si se pulsa el botón Hipotecar, la ventana información propiedades mostrará las propiedades que pertenecen"
                + "\n                                                                        al jugador actual y que se pueden hipotecar"
                + "\n\nBotones y Celdas:"
                + "\nApartado Jugar:"
                + "\nBotón Jugar:                                  permite comenzar el turno y tirar el dado para avanzar por el tablero."
                + "\nBotón Pasar Turno:                      pasa el turno al siguiente jugador."
                + "\n"
                + "\nApartado Salir de la Cárcel:"
                + "\nBotón Carcel Dado:                      permite intentar salir de la cárcel tirando el dado si se está encarcelado."
                + "\nBotón Carcel Pagar:                     permite salir de la cárcel pagando el precio de libertad si se está encarcelado."
                + "\n"
                + "\nApartado Gestión Inmobiliaria:"
                + "\nBotón Comprar:                                          permite al jugador actual comprar el título de propiedad de la casilla en la que se ha caído si no tiene propietario."
                + "\nBotón Vender:                                             permite al jugador actual vender una de sus propiedades (ver Celda Introducir la propiedad objetivo)."
                + "\nBotón Hipotecar:                                         permite al jugador actual hipotecar una de sus propiedades (ver Celda Introducir la propiedad objetivo)."
                + "\nBotón Cancelar Hipoteca:                         permite al jugador actual cancelar una de sus propiedades hipotecadas (ver Celda Introducir la propiedad objetivo)."
                + "\nBotón Edificar Casa:                                  permite al jugador actual edificar una casa en una de sus propiedades (ver Celda Introducir la propiedad objetivo)."
                + "\nBotón Edificar Hotel:                                  permite al jugador actual edificar una hotel en una de sus propiedades (ver Celda Introducir la propiedad objetivo)."
                + "\nCelda Introducir la propiedad objetivo: escribe en esta celda el número asociado a la propiedad sobre la que quieres realizar una acción (los números asociados"
                + "\n                                                                      se muestran junto con su propiedad correspondiente en la Ventana Información Propiedades al darle a un botón del Apartado Gestión Inmobiliaria)."
                + "\n                                                                      Una vez escrito el número asociado pulsa enter para aplicar la gestión."
                + "\nOtros Botones:"
                + "\nBotón Salir:                          cierra la ventana y acaba el programa."
                + "\nBotón About:                        muestra información sobre la autoría del programa."
                + "\nBotón Instrucciones:          muestra como usar el programa (si estás leyendo esto es que ya lo has descubierto).");
    }//GEN-LAST:event_jButtonInstruccionesActionPerformed

    
    /*
    *   Declaración de atributos y métodos
    */
    private Qytetet modeloQytetet;
    private boolean vender;
    private boolean hipotecar;
    private boolean cancelarHipoteca;
    private boolean edificarCasa;
    private boolean edificarHotel;
    private int numPropiedades;
    private String[] propiedades;
    
    public void actualizar(Qytetet juego) {
        modeloQytetet = juego;
        habilitarComenzarTurno();
        vistaQytetet1.actualizar(juego);
        vistaQytetet1.actualizarPropiedades(juego, 0);
    }
    
    public void habilitarComenzarTurno(){
        numPropiedades = 0;
        vender = false;
        hipotecar = false;
        cancelarHipoteca = false;
        edificarCasa = false;
        edificarHotel = false;
        
        jTextFieldPropiedad.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        
        this.jButtonVender.setEnabled(false);
        this.jButtonHipotecar.setEnabled(false);
        this.jButtonCancelarHipoteca.setEnabled(false);
        this.jButtonEdificarCasa.setEnabled(false);
        this.jButtonEdificarHotel.setEnabled(false);
        
        this.jButtonSalir.setEnabled(true);
        this.jButtonComprar.setEnabled(false);
        this.jButtonPasarTurno.setEnabled(false);
        if(modeloQytetet.getJugadorActual().getEncarcelado()) {
            this.jButtonCarcelPagar.setEnabled(true);
            this.jButtonCarcelDado.setEnabled(true);
            this.jButtonJugar.setEnabled(false);
        }
        else {
            this.jButtonCarcelDado.setEnabled(false);
            this.jButtonCarcelPagar.setEnabled(false);
            this.jButtonJugar.setEnabled(true);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControladorQytetet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControladorQytetet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControladorQytetet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControladorQytetet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        // Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                ControladorQytetet controladorQytetet = new ControladorQytetet();
                CapturaNombreJugadores capturaNombres = new CapturaNombreJugadores(controladorQytetet, true);
                Dado.createInstance(controladorQytetet);
                Qytetet juego = Qytetet.getInstance();

                ArrayList<String> nombres = capturaNombres.obtenerNombres();
                juego.inicializarJuego(nombres);

                controladorQytetet.actualizar(juego);
                
                controladorQytetet.setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label BotonesCarcel;
    private java.awt.Label BotonesInmobiliaria;
    private java.awt.Label BotonesJugar;
    private java.awt.Label IntroducirPropiedad;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAbout;
    private javax.swing.JButton jButtonCancelarHipoteca;
    private javax.swing.JButton jButtonCarcelDado;
    private javax.swing.JButton jButtonCarcelPagar;
    private javax.swing.JButton jButtonComprar;
    private javax.swing.JButton jButtonEdificarCasa;
    private javax.swing.JButton jButtonEdificarHotel;
    private javax.swing.JButton jButtonHipotecar;
    private javax.swing.JButton jButtonInstrucciones;
    private javax.swing.JButton jButtonJugar;
    private javax.swing.JButton jButtonPasarTurno;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonVender;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JTextField jTextFieldPropiedad;
    private GUIQytetet.VistaQytetet vistaQytetet1;
    // End of variables declaration//GEN-END:variables
}
